"use client";

import React, { useEffect, useState } from "react";
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { ReactQueryDevtools } from "@tanstack/react-query-devtools";
import { ToastContainer } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";

export function Providers({ children }: { children: React.ReactNode }) {
  const [queryClient] = React.useState(
    () =>
      new QueryClient({
        defaultOptions: {
          queries: {
            // –í–ê–ñ–ù–û: —Å—Ç—Ä–æ–≥–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ü–∏–∫–ª–æ–≤
            refetchOnWindowFocus: false,
            refetchOnMount: true,
            refetchOnReconnect: false,
            retry: (failureCount, error) => {
              // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø—Ä–∏ 401 –∏ 403 –æ—à–∏–±–∫–∞—Ö
              if (error && typeof error === "object" && "status" in error) {
                if (error.status === 401 || error.status === 403) {
                  return false;
                }
              }
              // –ú–∞–∫—Å–∏–º—É–º 1 –ø–æ–≤—Ç–æ—Ä –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ü–∏–∫–ª–æ–≤
              return failureCount < 1;
            },
            retryDelay: 2000, // 2 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
            staleTime: 1000 * 60 * 5, // 5 –º–∏–Ω—É—Ç - –¥–∞–Ω–Ω—ã–µ —Å—á–∏—Ç–∞—é—Ç—Å—è —Å–≤–µ–∂–∏–º–∏
            gcTime: 1000 * 60 * 10, // 10 –º–∏–Ω—É—Ç - –≤—Ä–µ–º—è –∂–∏–∑–Ω–∏ –≤ –∫–µ—à–µ
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ª–∏—à–Ω–∏–µ —Ä–µ—Ñ–µ—Ç—á–∏
            refetchInterval: false,
            refetchIntervalInBackground: false,
          },
          mutations: {
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –º—É—Ç–∞—Ü–∏–π
            retry: (failureCount, error) => {
              if (error && typeof error === "object" && "status" in error) {
                if (error.status === 401 || error.status === 403) {
                  return false;
                }
              }
              return failureCount < 1;
            },
            retryDelay: 1000,
          },
        },
      })
  );

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏
  const [hasMounted, setHasMounted] = useState(false);

  useEffect(() => {
    setHasMounted(true);
  }, []);

  // Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ –≤ development
  useEffect(() => {
    if (process.env.NODE_ENV === "development" && hasMounted) {
      console.log("üîß QueryClient –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:", {
        defaultOptions: queryClient.getDefaultOptions(),
        queries: queryClient.getQueryCache().getAll().length,
        mutations: queryClient.getMutationCache().getAll().length,
      });
    }
  }, [hasMounted, queryClient]);

  return (
    <QueryClientProvider client={queryClient}>
      {children}

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–≤—Ç—É–ª—ã —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏ –∏ –≤ development */}
      {hasMounted && process.env.NODE_ENV === "development" && (
        <ReactQueryDevtools initialIsOpen={false} />
      )}

      {/* ToastContainer —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏ */}
      {hasMounted && (
        <ToastContainer
          position="top-right"
          autoClose={3000}
          hideProgressBar={false}
          newestOnTop={false}
          closeOnClick
          rtl={false}
          pauseOnFocusLoss
          draggable
          pauseOnHover
          theme="light"
          className="mt-16"
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
        />
      )}
    </QueryClientProvider>
  );
}
