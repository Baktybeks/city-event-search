// src/components/providers/AuthProvider.tsx

"use client";

import { useEffect } from "react";
import { useAuthStore } from "@/store/authStore";
import { useSyncAuthCookie } from "@/hooks/useSyncAuthCookie";
import { useCurrentUser } from "@/services/authService";

interface AuthProviderProps {
  children: React.ReactNode;
}

export function AuthProvider({ children }: AuthProviderProps) {
  const { user: storeUser, setUser, clearUser } = useAuthStore();
  const { data: queryUser, isLoading } = useCurrentUser();

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å cookies
  useSyncAuthCookie();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  useEffect(() => {
    console.log("üöÄ AuthProvider: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...");

    // –ï—Å–ª–∏ React Query –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (queryUser) {
      if (typeof queryUser === "object" && "notActivated" in queryUser) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
        console.log("‚ö†Ô∏è AuthProvider: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω");
        clearUser();
      } else if (queryUser.$id) {
        // –í–∞–ª–∏–¥–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        console.log(
          "‚úÖ AuthProvider: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:",
          queryUser.name
        );
        setUser(queryUser);
      }
    } else if (queryUser === null && !isLoading) {
      // –Ø–≤–Ω–æ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞
      console.log("‚ùå AuthProvider: –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)");
      clearUser();
    }
  }, [queryUser, isLoading, setUser, clearUser]);

  return <>{children}</>;
}
